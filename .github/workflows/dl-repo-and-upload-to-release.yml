name: Repo sync and upload archive to release

on:
  workflow_dispatch:
    inputs:
      init_url:
        description: URL for repo init -u
        required: true
        default: "https://github.com/OnePlusOSS/kernel_manifest"
        type: string
      branch:
        description: Branch to init
        required: true
        default: oneplus/sm8650
        type: string
      manifest:
        description: Manifest
        required: true
        default: oneplus12_u.xml
        type: string
      split_size:
        description: Size per split
        required: true
        default: 1G
        type: string
      debug_or_make_config_via_reverse_proxy_ssh:
        description: "debug or mkconf shell(ssh username: runner)"
        default: "debug"
        type: choice
        options:
          - none
          - debug
          - mkconf
  # push:
  #   branches: [ "main" ]

env:
  INIT_URL: ${{ inputs.init_url || 'https://github.com/OnePlusOSS/kernel_manifest' }}
  BRANCH: ${{ inputs.branch || 'oneplus/sm8650' }}
  MANIFEST: ${{ inputs.manifest || 'oneplus12_u.xml' }}
  SPLIT_SIZE: ${{ inputs.split_size || '1G' }}
  MY_SSH_PUB_KEY: ${{ secrets.SSH_PUBLIC_KEY || 'none' }}
  MY_REVERSE_PROXY_TOKEN: ${{ secrets.REVERSE_PROXY_TOKEN || 'none' }}
  CPOLAR: ${{ inputs.debug_or_make_config_via_reverse_proxy_ssh || 'debug' }}


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (optional, if your workflow needs access to the current repo)
        uses: actions/checkout@v4

      - name: Remote debug
        if: env.CPOLAR == 'debug'
        shell: bash
        run: bash ${GITHUB_WORKSPACE}/debug-via-reverse-proxy.sh nonblock
      
      - name: Check Server Performance
        run: |
          echo "警告⚠"
          echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
          echo -e "已知CPU型号(降序): 7763，8370C，8272CL，8171M，E5-2673\n"
          echo "--------------------------CPU信息--------------------------"
          echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
          echo "CPU核心数量: $(nproc)"
          echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
          echo "--------------------------内存信息--------------------------"
          echo "已安装内存详细信息:"
          echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
          echo "--------------------------硬盘信息--------------------------"
          echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

      - name: Free disk space
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: /home/runner/repo_sync
          root-reserve-mb: 10240
          temp-reserve-mb: 2048
          swap-size-mb: 4096

      - name: Print disk usage after freeing disk space
        run: |
          df -h

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install repo
        run: sudo apt install -y repo

      - name: Make and change directory
        run: |
          mkdir -p /home/runner/repo_sync
          cd /home/runner/repo_sync
        working-directory: ${{ github.workspace }} # Start from the workflow workspace

      - name: Repo init
        run: repo init -u ${{ env.INIT_URL }} -b ${{ env.BRANCH }} -m ${{ env.MANIFEST }}
        working-directory: /home/runner/repo_sync

      # - name: Remote make menuconfig
      #   if: env.CPOLAR == 'mkconf'
      #   # working-directory: /workdir/openwrt
      #   shell: bash
      #   run: |
      #     bash ${GITHUB_WORKSPACE}/debug-via-reverse-proxy.sh

      - name: Repo sync
        run: .repo/repo/repo sync -j8
        working-directory: /home/runner/repo_sync

      - name: Print disk usage after repo sync
        if: !cancelled()
        working-directory: /home/runner/repo_sync
        run: |
          df -h
          du -sh ~/.repo
          du -sh ~/*

      # - name: Create archive
      #   run: tar -czvf artifacts.tar.gz --exclude=.git --exclude=.repo * .??*
      #   working-directory: /home/runner/repo_sync

      # - name: Split archive
      #   run: split -b 1G artifacts.tar.gz artifacts.tar.gz.
      #   working-directory: /home/runner/repo_sync

      - name: Create and Split archive
        # run: tar -czvf - --exclude=.git --exclude=.repo * .??* | split -b 1G artifacts.tar.gz.
        run: tar --remove-files -czvf - * .??* | split -b ${{ env.SPLIT_SIZE }} artifacts.tar.gz.
        working-directory: /home/runner/repo_sync

      - name: Print disk usage after archiving
        if: !cancelled()
        run: |
          df -h

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: artifacts-${{ github.run_number }}
          release_name: artifacts
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/repo_sync/artifacts.tar.gz.*
          asset_name: ${{ github.workflow }}-${{ github.run_number }}-$

      - name: Wait for Remote Debug Exit if One or More Previous Step Failure
        if: failure() && env.CPOLAR != 'none' && !cancelled()
        shell: bash
        run: |
          while pgrep cpolar
          do
            sleep 10
          done